/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;

import controller.ExportarController;
import controller.PagoJpaController;
import java.util.AbstractList;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import model.Pago;

/**
 *
 * @author Soporte
 */
public class ExportarHistorial extends javax.swing.JFrame {

    /**
     * Creates new form ExportarHistorial
     */
    private PagoJpaController pctrl = new PagoJpaController();
    private List<Integer> fechas; // Lista de fechas disponibles

    /**
     * Creates new form ExportarHistorial
     */
    public ExportarHistorial() {
        initComponents();
        // Cargar las fechas únicas en el JComboBox
        cargarFechas();
    }

    private void cargarFechas() {
        fechas = pctrl.findDistinctFechas();
        jCFech.setModel(pctrl.fechaComboBoxModel());
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jCFech = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("SELECCIONA LA FECHA DE LA NOMINA A EXPORTAR");

        jCFech.setModel(pctrl.fechaComboBoxModel());

        jButton1.setText("EXPORTAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(jCFech, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addComponent(jButton1)))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jCFech, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       int selectedIndex = jCFech.getSelectedIndex();

// Verifica si el índice es válido
if (selectedIndex >= 0 && selectedIndex < fechas.size()) {
    // Obtén la fecha correspondiente al índice seleccionado
    int fecha = fechas.get(selectedIndex);

    // Obtén la lista de pagos para la fecha seleccionada
    List<Pago> pagos = pctrl.findPagosFech(fecha);

    // Crea el ExportarController con la lista de pagos
    ExportarController exctrl = new ExportarController(pagos);

    try {
        // Exporta a Excel
        exctrl.exportarAExcel();
    } catch (Exception ex) {
        Logger.getLogger(ExportarHistorial.class.getName()).log(Level.SEVERE, null, ex);
    }
} else {
    // Manejo de error si el índice seleccionado es inválido
    JOptionPane.showMessageDialog(this, "Por favor, seleccione una fecha válida.", "Error", JOptionPane.ERROR_MESSAGE);
}

    }//GEN-LAST:event_jButton1ActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    public javax.swing.JComboBox<String> jCFech;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
